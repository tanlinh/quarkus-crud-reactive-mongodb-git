
# Mongodb
quarkus.mongodb.connection-string = mongodb://localhost:27017
quarkus.mongodb.database = management
# JWT
mp.jwt.verify.publickey.location=publickey.pem
smallrye.jwt.sign.key.location=publickey.pem
quarkus.native.resources.includes=publickey.pem 

#encode password
quarkusjwt.password.secret=mysecret
quarkusjwt.password.iteration=33
quarkusjwt.password.keylength=256  
quarkusjwt.password.keyFactory=PBKDF2WithHmacSHA512

#testing
quarkus.http.test-port=8083
quarkus.http.test-ssl-port=8446
quarkus.http.test-timeout=10s

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:db
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.hibernate-orm.sql-load-script=META-INF/sql/import-test.sql
%test.quarkus.http.port=9090
%test.quarkus.datasource.jdbc=false

quarkus.http.port=8080

#upload file
upload.directory= D:/quarkus-crud-reactive-mongodb/src/main/resources/file

#config call product-client
client.ProductClient/mp-rest/url=http://localhost:7000
client.ProductClient/mp-rest/scope=javax.inject.Singleton

#configure Kafka
kafka.bootstrap.servers=http://localhost:29092

# Configure the Kafka source (we read from it)
mp.messaging.incoming.user-in.connector=smallrye-kafka
mp.messaging.incoming.user-in.topic=user
mp.messaging.incoming.user-in.value.deserializer=processor.UserDeserializer

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.user-out.connector=smallrye-kafka
mp.messaging.outgoing.user-out.topic=user
mp.messaging.outgoing.user-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#config kubernetes
#quarkus.kubernetes.image-pull-policy=ifNotPresent
#quarkus.kubernetes.service-type=LoadBalancer